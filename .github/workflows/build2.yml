name: C_build2

on:
  push:
    branches:
      - master
  workflow_dispatch:
env:
  build_folder: ./build/gpredict-2.3.54

jobs:
  build_linux:

    runs-on: ubuntu-latest

    steps:
    - name: clone repo
      uses: actions/checkout@v3
    - name: create folder ./build
      run:  mkdir ./build   
      #Создаем папку с именем по правилу "<Имя_Программы>_<Версия>"
      #Чтобы в ней собирать .deb-пакет
    - name: create folder ./build/gpredict-2.3.54
      run:  mkdir ${{env.build_folder}}
      #копируем исходники
    - name: copying files
      run: mv ./* ${{env.build_folder}}
        # если ошибка на этом шаге - всё равно продолжаем
      continue-on-error: true 
    - name: sudo apt update
      run: sudo apt update
    - name: apt install
      run: |
        sudo apt install libtool intltool autoconf automake libcurl4-openssl-dev
        sudo apt install pkg-config libglib2.0-dev libgtk-3-dev libgoocanvas-2.0-dev
    - name: run ./autogen.sh
      run: | 
        cd ${{env.build_folder}}
        ./autogen.sh
    - name: make
      run: |
        cd ${{env.build_folder}}
        make
    # устанавливаем пакеты для работы dh_make
    - name: sudo apt-get install build-essential dh-make
      run: sudo apt-get install build-essential dh-make
    - name: dh_make -s -y --createorig
      run: |
        cd ${{env.build_folder}}
        dh_make -s -y --createorig 
          # "-s" - single пакет; 
          #"-y" - ответ yes на все вопросы; 
          #-"createorig" - создание всех нужных папок и файлов атоматически.

    # Собираем пакет      
    - name: dpkg-buildpackage -rfakeroot -us -uc
      run: |
        cd ${{env.build_folder}}
        dpkg-buildpackage -rfakeroot -us -uc
          # "-rfakeroot" - дает права действовать, как root
          # "-us" - не подписывать пакет исходников
          # "-uc" - не подписывать бинарный пакет
    - name: ls -lt ./build
      run: ls -lt ./build
    - uses: actions/upload-artifact@v3
      with:
        name: for_Linux
        path: |
          ./build/gpredict_2.3.54-1_amd64.deb
          ./build/gpredict-2.3.54/installation_on_linux.txt

    
  build_windows:

    runs-on: windows-latest
    defaults:
     run:
       shell: msys2 {0}
    steps:
    - name: clone repo
      uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
      with:
        msystem: mingw32
        update: true #обновляем пакеты 
        install: zip mingw-w64-i686-gcc mingw-w64-i686-pkg-config mingw-w64-i686-gtk3 mingw-w64-i686-goocanvas mingw-w64-x86_64-toolchain autotools git #установим пакеты       
    - name: make dist
      run: |
        cd win32
        make dist
    - name: dir
      run: dir win32
    - uses: actions/upload-artifact@v3
      with:
        name: for_windows
        path: |
          ./win32/gpredict-...zip
          ./installation_on_windows.txt
      



